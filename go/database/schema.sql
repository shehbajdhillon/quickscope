DROP TYPE IF EXISTS team_type CASCADE;
CREATE TYPE team_type AS ENUM ('PERSONAL', 'TEAM');

DROP TYPE IF EXISTS membership_type CASCADE;
CREATE TYPE membership_type AS ENUM ('OWNER', 'ADMIN', 'MEMBER');

DROP TABLE IF EXISTS userinfo CASCADE;
CREATE TABLE userinfo (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  email TEXT UNIQUE NOT NULL,
  full_name TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS team CASCADE;
CREATE TABLE team (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  team_slug TEXT UNIQUE NOT NULL,
  team_name TEXT NOT NULL,
  stripe_customer_id TEXT UNIQUE,
  team_type TEAM_TYPE NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS team_membership CASCADE;
CREATE TABLE team_membership (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  team_id BIGINT REFERENCES team (id) ON DELETE CASCADE NOT NULL,
  user_id BIGINT REFERENCES userinfo (id) ON DELETE CASCADE NOT NULL,
  membership_type MEMBERSHIP_TYPE NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (team_id, user_id)
);

DROP TABLE IF EXISTS team_invite CASCADE;
CREATE TABLE team_invite (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  inviteCode TEXT UNIQUE NOT NULL,
  team_id BIGINT REFERENCES team (id) ON DELETE CASCADE NOT NULL,
  invitee_email TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (team_id, invitee_email)
);

DROP TABLE IF EXISTS monitor CASCADE;
CREATE TABLE monitor (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  team_id BIGINT REFERENCES team (id) ON DELETE CASCADE NOT NULL,
  monitor_slug TEXT NOT NULL,
  monitor_name TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (team_id, monitor_slug)
);

DROP TABLE IF EXISTS provider CASCADE;
CREATE TABLE provider (
  id BIGSERIAL PRIMARY KEY NOT NULL,
  monitor_id BIGINT REFERENCES monitor (id) ON DELETE CASCADE NOT NULL,
  provider_name TEXT NOT NULL,
  credentials TEXT NOT NULL
);
