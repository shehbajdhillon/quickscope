# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar DateTime
scalar Int64
scalar Upload

directive @loggedIn on FIELD_DEFINITION
directive @memberTeam on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @ownsInvite on ARGUMENT_DEFINITION
directive @isInvitee on ARGUMENT_DEFINITION

type Query {
  teams(teamSlug: String @memberTeam): [Team!]! @loggedIn
}

type Mutation {
  createMonitor(input: NewMonitor!): Monitor!
  addIntegration(input: NewIntegration!): Integration!
  addGithubInstallationId(teamSlug: String! @memberTeam, installationId: Int64!): Integration!
  addVercelIntegration(teamSlug: String! @memberTeam, vercelToken: VercelToken!): Integration!
}

type Team {
  id: Int64!
  teamSlug: String!
  teamName: String!
  teamType: String!
  monitors(monitorSlug: String): [Monitor!]!
  integrations(integrationId: Int64, integrationName: IntegrationType): [Integration!]!
}

type Monitor {
  id: Int64!
  teamId: Int64!
  monitorSlug: String!
  monitorName: String!
}

input NewMonitor {
  teamId: Int64! @memberTeam
  monitorName: String!
}

type Integration {
  id: Int64!
  accountName: String!
  integrationName: IntegrationType!
  githubInstallationId: Int64!
  vercelInstallationId: String!
}

input NewIntegration {
  teamId: Int64! @memberTeam
  integrationName: IntegrationType!
}

input VercelToken {
  tokenType: String!
  accessToken: String!
  installationId: String!
  userId: String!
  teamId: String!
  accountName: String!
}

enum IntegrationType {
  GITHUB
  POSTHOG
  RAILWAYAPP
  VERCEL
}
